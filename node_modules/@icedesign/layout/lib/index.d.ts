/// <reference types="react" />

import React from "react";

export interface SectionProps
  extends React.HtmlHTMLAttributes<HTMLHtmlElement> {
  /**
   * 可滚动
   */
  scrollable?: boolean;
}

export class Section extends React.Component<SectionProps, any> {}

export interface HeaderProps extends React.HtmlHTMLAttributes<HTMLHtmlElement> {
  /**
   * 主题
   */
  theme?: "dark" | "light";

  /**
   * 子元素垂直对齐方式
   */
  alignItems?: "flex-start" | "flex-end" | "center" | "baseline" | "stretch";
}

export class Header extends React.Component<HeaderProps, any> {}

export interface FooterProps
  extends React.HtmlHTMLAttributes<HTMLHtmlElement> {}

export class Footer extends React.Component<FooterProps, any> {}

export interface AsideProps extends React.HtmlHTMLAttributes<HTMLHtmlElement> {
  /**
   * 是否收起
   */
  collapsed?: boolean;

  /**
   * 可滚动
   */
  scrollable?: boolean;

  /**
   * 收起后的宽度
   */
  collapsedWidth?: string | number;

  /**
   * collapsed 收起状态切换
   */
  onCollapseChange?: (() => void);

  /**
   * 展示默认 trigger
   */
  trigger?: boolean;

  /**
   * 宽度
   */
  width?: string | number;

  /**
   * 主题
   */
  theme?: "dark" | "light";
}

export class Aside extends React.Component<AsideProps, any> {}

export interface MainProps extends React.HtmlHTMLAttributes<HTMLHtmlElement> {
  /**
   * 可滚动
   */
  scrollable?: boolean;
}

export class Main extends React.Component<MainProps, any> {}
export interface LayoutProps extends React.HtmlHTMLAttributes<HTMLHtmlElement> {
  /**
   * 布局模块滚动跟随模式
   */
  fixable?: boolean;
}

export default class Layout extends React.Component<LayoutProps, any> {
  static Section: typeof Section;
  static Header: typeof Header;
  static Footer: typeof Footer;
  static Aside: typeof Aside;
  static Main: typeof Main;
}
